# shawfamily

server {
    listen 80;
    server_name shawfamily.online www.shawfamily.online;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    # TODO: use self signed cert
    # For now, SSL only enabled if the certificate file exists
    if ($ssl_certificate_fullchain != "") {

        listen 443 ssl;
        server_name shawfamily.online www.shawfamily.online;

        ssl_certificate /etc/letsencrypt/live/shawfamily.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/shawfamily.online/privkey.pem;
        
        # SSL Configuration (Optional, but recommended)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

        location / {
            proxy_pass http://shaw-family:3000;  # Adjust the backend service name if needed
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /.well-known/acme-challenge/ {
            root /var/www/html;  # This ensures Certbot can renew certificates
        }
    }
}


# jonshaw199

server {
    listen 80;
    server_name jonshaw199.com www.jonshaw199.com;

    location / {
        proxy_pass http://jonshaw199;  # Adjust the backend service name if needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}