# shawfamily

server {
    listen 80;
    server_name shawfamily.online www.shawfamily.online;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name shawfamily.online www.shawfamily.online;

    ssl_certificate /etc/letsencrypt/live/shawfamily.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/shawfamily.online/privkey.pem;
    
    # SSL Configuration (Optional, but recommended)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    location / {
        proxy_pass http://shaw-family:3000;  # Adjust the backend service name if needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/html;  # This ensures Certbot can renew certificates
    }
}


# jonshaw199 - HTTP to HTTPS Redirect
server {
    listen 80;
    server_name jonshaw199.com www.jonshaw199.com;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# jonshaw199 - HTTPS Server
server {
    listen 443 ssl;
    server_name jonshaw199.com www.jonshaw199.com;

    ssl_certificate /etc/letsencrypt/live/jonshaw199.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jonshaw199.com/privkey.pem;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # Logging form submissions
    location /submit-contact-form {
        content_by_lua_block {
            local logger = require("logging")
            logger.log_request_body("/var/log/nginx/contact_form_submissions.log")
        }
    }

    location / {
        proxy_pass http://jonshaw199;  # Ensure this points to the correct container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Routing requests to /home/api to another container at home:8000/api
    location /home/api/ {
        proxy_pass http://home:8000/api;  # Route to the home container at port 8000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Routing all other requests starting with /home/ to home-client
    location /home/ {
        proxy_pass http://home-client;  # Route to the home-client container
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/html;  # This allows Certbot to verify the domain
    }
}

# jonshaw199 local dev
server {
    listen 80;
    server_name localhost;

    # Logging form submissions
    location /submit-contact-form {
        content_by_lua_block {
            local logger = require("logging")
            logger.log_request_body("/var/log/nginx/contact_form_submissions.log")
        }
    }
}